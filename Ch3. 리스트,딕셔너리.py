### 리스트, 딕셔너리

### 리스트
# 동적 배열로 구현 
# 일체의 다용도 자료형, (스택과 큐 모두 사용가능)
# 다양한 기능을 제공(O(1) 연산도 존재)

# len(a) : 전채 요소의 개수를 리턴 , O(1)
# a[i] : 인덱스 i의 요소를 가져옴, O(1)
# a[i:j] : 인덱스 i부터 j-1까지 k개의 요소를 가져옴, O(k)
# elem in a : elem 요소가 존재하는지 확인, O(n)
# a.count(elem) : elem 요소의 개수를 리턴, O(n)
# a.index(elem) : elem 요소의 인덱스를 리턴, O(n)
# a.append(elem) : 리스트 마지막에 elem 요소를 추가, O(1)
# a.pop() : 리스트 마지막 요소를 추출,스택의 연산, O(1)
# a.pop(0) : 리스트 첫번째 요소를 추출, 큐의 연산, O(n)
# del a[i] : a[i] 삭제, O(n)
# a.sort : O(nlogn)
# min(a),max(a) : O(n)
# a.reverse() : O(n)(입력 순서가 반대로 됨)

# 리스트 삭제 : 인덱스삭제(del a[i]), 요소 삭제(a.remove(elem)), pop삭제

# 파이썬은 모든 것이 객체이기 때문에 리스트 또한 객체를 가리키는 포인터 목록이라 볼 수 있다.
# 참조하는 기능이므로 마치 배열과 연결리스트를 합친 듯한 강력한 기능 제공


### 딕셔너리 

